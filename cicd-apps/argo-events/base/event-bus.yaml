---
apiVersion: argoproj.io/v1alpha1
kind: EventBus
metadata:
  name: default
spec:
  nats:
    native:
      replicas: 3
      auth: token
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: github-eventsource
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
spec:
  rules:
    - http:
        paths:
          - path: /push
            pathType: Prefix
            backend:
              service:
                name: webhook-eventsource-svc
                port:
                  number: 12000
      host: acme.com
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: github
spec:
  service:
    ports:
      - port: 12000
        targetPort: 12000
  github:
    argo-combined-app:
      owner: dataos
      repository: dbt_core_models
      webhook:
        endpoint: /dbt_core_models
        port: '12000'
        method: POST
        url: http://acme.com
      events:
        - '*'
      apiToken:
        name: github-access
        key: token
      insecure: true
      active: true
      contentType: json
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: github
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: github-eventsource-svc
                port:
                  number: 12000
      host: acme.com
---
...
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
  name: argo-events-aggregate-to-admin
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - sensors
      - sensors/finalizers
      - sensors/status
      - eventsources
      - eventsources/finalizers
      - eventsources/status
      - eventbus
      - eventbus/finalizers
      - eventbus/status
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
  name: argo-events-aggregate-to-edit
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - sensors
      - sensors/finalizers
      - sensors/status
      - eventsources
      - eventsources/finalizers
      - eventsources/status
      - eventbus
      - eventbus/finalizers
      - eventbus/status
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: 'true'
  name: argo-events-aggregate-to-view
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - sensors
      - sensors/finalizers
      - sensors/status
      - eventsources
      - eventsources/finalizers
      - eventsources/status
      - eventbus
      - eventbus/finalizers
      - eventbus/status
    verbs:
      - get
      - list
      - watch
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-events-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-events-role
subjects:
  - kind: ServiceAccount
    name: argo-events-sa
    namespace: argo-events
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-events-role
rules:
  - apiGroups:
      - argoproj.io
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
    resources:
      - workflows
      - workflows/finalizers
      - workflowtemplates
      - workflowtemplates/finalizers
      - cronworkflows
      - cronworkflows/finalizers
      - clusterworkflowtemplates
      - clusterworkflowtemplates/finalizers
      - sensors
      - sensors/finalizers
      - sensors/status
      - eventsources
      - eventsources/finalizers
      - eventsources/status
      - eventbus
      - eventbus/finalizers
      - eventbus/status
  - apiGroups:
      - ''
    resources:
      - pods
      - pods/exec
      - configmaps
      - secrets
      - services
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
      - statefulsets
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---

apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
spec:
  template:
    serviceAccountName: argo-events-sa
  dependencies:
    - name: github
      eventSourceName: github
      eventName: argo-combined-app
  triggers:
    - template:
        name: trigger
        argoWorkflow:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: argo-combined-app-
                namespace: workflows
              spec:
                entrypoint: build
                serviceAccountName: workflow
                volumes:
                  - name: regcred
                    secret:
                      secretName: regcred
                      items:
                        - key: .dockerconfigjson
                          path: config.json
                  - name: github-access
                    secret:
                      secretName: github-access
                      items:
                        - key: token
                          path: token
                        - key: user
                          path: user
                        - key: email
                          path: email
                templates:
                  - name: build
                    dag:
                      tasks:
                        - name: build
                          templateRef:
                            name: container-image
                            template: build-kaniko-git
                            clusterScope: true
                          arguments:
                            parameters:
                              - name: repo_url
                                value: ''
                              - name: repo_ref
                                value: ''
                              - name: repo_commit_id
                                value: ''
                              - name: container_image
                                value: CHANGE_ME_IMAGE_OWNER/
                              - name: container_tag
                                value: ''
                        - name: promote-staging
                          templateRef:
                            name: promote
                            template: promote
                            clusterScope: true
                          arguments:
                            parameters:
                              - name: environment
                                value: staging
                              - name: repo_owner
                                value: vfarcic
                              - name: repo_name
                                value: argo-combined-demo
                              - name: image_owner
                                value: CHANGE_ME_IMAGE_OWNER
                              - name: image_name
                                value: ''
                              - name: tag
                                value: ''
                          dependencies:
                            - build
                        - name: promote-production
                          templateRef:
                            name: promote
                            template: promote
                            clusterScope: true
                          arguments:
                            parameters:
                              - name: environment
                                value: production
                              - name: repo_owner
                                value: vfarcic
                              - name: repo_name
                                value: argo-combined-demo
                              - name: image_owner
                                value: CHANGE_ME_IMAGE_OWNER
                              - name: image_name
                                value: ''
                              - name: tag
                                value: ''
                          dependencies:
                            - test-functional
                            - test-integration
                        - name: test-functional
                          template: test
                          dependencies:
                            - promote-staging
                        - name: test-integration
                          template: test
                          dependencies:
                            - promote-staging
                  - name: test
                    script:
                      image: alpine
                      command: [sh]
                      source: |
                        echo This is a testing simulation...
                        sleep 5
                      volumeMounts:
                        - name: github-access
                          mountPath: /.github/
          parameters:
            - src:
                dependencyName: github
                dataKey: body.repository.git_url
              dest: spec.templates.0.dag.tasks.0.arguments.parameters.0.value
            - src:
                dependencyName: github
                dataKey: body.ref
              dest: spec.templates.0.dag.tasks.0.arguments.parameters.1.value
            - src:
                dependencyName: github
                dataKey: body.after
              dest: spec.templates.0.dag.tasks.0.arguments.parameters.2.value
            - src:
                dependencyName: github
                dataKey: body.repository.name
              dest: spec.templates.0.dag.tasks.0.arguments.parameters.3.value
              operation: append
            - src:
                dependencyName: github
                dataKey: body.after
              dest: spec.templates.0.dag.tasks.0.arguments.parameters.4.value
            - src:
                dependencyName: github
                dataKey: body.repository.name
              dest: spec.templates.0.dag.tasks.1.arguments.parameters.4.value
            - src:
                dependencyName: github
                dataKey: body.after
              dest: spec.templates.0.dag.tasks.1.arguments.parameters.5.value
            - src:
                dependencyName: github
                dataKey: body.repository.name
              dest: spec.templates.0.dag.tasks.2.arguments.parameters.4.value
            - src:
                dependencyName: github
                dataKey: body.after
              dest: spec.templates.0.dag.tasks.2.arguments.parameters.5.value
